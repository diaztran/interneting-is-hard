* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Here is out base styles, which should apple to all layouts (mobiles, tablet, and desktop). Make sure to add these above the @media rules we created earlier and below the universal selector rule that resets our margins and padding */
.page {
  display: flex;
  flex-wrap: wrap;
}

.section {
  width: 100%;
  height: 300px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.menu {
  background-color: #5995da;
  height: 80px;
}

.header {
  background-color: #b2d6ff;
}

.content {
  background-color: #eaedf0;
  height: 600px;
}

.sign-up {
  background-color: #d6e9fe;
}

.feature-1 {
  background-color: #f5cf8e;
}

.feature-2 {
  background-color: #f09a9d;
}

.feature-3 {
  background-color: #c8c6fa;
}

.header {
  height: auto;
  justify-content: inherit;
  align-items: inherit;
}

.photo img {
  width: 100%;
  display: block;
}
/* Mobile Styles */
@media only screen and (max-width: 400px) {
  body {
    background-color: #f09a9d;
  }
}

/* @401 and @960 are called breakpoints */

/* Tablet Styles */
@media only screen and (min-width: 401px) and (max-width: 960px) {
  .sign-up,
  .feature-1,
  .feature-2,
  .feature-3 {
    width: 50%;
  }
}

@media only screen and (min-width: 961px) {
  .page {
    width: 960px;
    margin: 0 auto;
  }

  .feature-1,
  .feature-2,
  .feature-3 {
    width: 33.3%;
  }

  .header {
    height: 400px;
  }

  .sign-up {
    height: 200px;
    order: 1;
  }

  .content {
    order: 2;
  }
}

/* To get a fluid image in Chrome, we need to tell the illustation to always
fill the width of its container. The following snippet will do it */

/* When we specify 100% width on an image, it'll assume we want to maintain 
its aspect ratio and calculate its heigth auto matically. This fixes the mobile
layout, but it cause problems on desktop and tabet layout */

.illustration img {
  width: 100%;
  display: block;
}
